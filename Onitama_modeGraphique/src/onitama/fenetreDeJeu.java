/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onitama;

import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author antoi
 */
public class fenetreDeJeu extends javax.swing.JFrame {
    Joueur[] listeJoueurs = new Joueur[2];
    Grille grilleJeu = new Grille();
    Joueur joueurCourant;
    Pioche piochePartie = new Pioche();
    
    
    public fenetreDeJeu() {
        initComponents();
        
        carteJoueur1.setVisible(false);
        carteJoueur2.setVisible(false);
        carteEchiquier.setVisible(false);
        
        carteJoueur1.setVisible(false);
        carteJoueur2.setVisible(false);
        carteEchiquier.setVisible(false);
        
        for (int i=4; i>=0;i--){
            for (int j=0; j<5;j++){
                CelluleGraphique cellGraph = new CelluleGraphique(grilleJeu.Cellules[i][j]);
                cellGraph.addActionListener(new java.awt.event.ActionListener(){
                    public void actionPerformed(java.awt.event.ActionEvent evt){
                        Cellule c = cellGraph.celluleAssociee;
                        if (c.pieceCourante == null) return;
                        if (!c.pieceCourante.couleur.equals(joueurCourant.couleur)) return;
                        if (c.pieceCourante.couleur.equals(joueurCourant.couleur))
                        
                    }
                });
                
                panneauGrille.add(cellGraph);
            }
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneauGrille = new javax.swing.JPanel();
        carteJoueur1 = new javax.swing.JPanel();
        carteJoueur2 = new javax.swing.JPanel();
        carteEchiquier = new javax.swing.JPanel();
        panneauInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelJ1 = new javax.swing.JTextField();
        labelJ2 = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        labelJCourant = new javax.swing.JLabel();
        message = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        labelCouleurJ1 = new javax.swing.JLabel();
        labelCouleurJ2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panneauGrille.setBackground(new java.awt.Color(255, 255, 255));
        panneauGrille.setLayout(new java.awt.GridLayout(5, 5));
        getContentPane().add(panneauGrille, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 700, 700));

        carteJoueur1.setBackground(new java.awt.Color(255, 255, 255));
        carteJoueur1.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(carteJoueur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 560, 300, 173));

        carteJoueur2.setBackground(new java.awt.Color(255, 255, 255));
        carteJoueur2.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(carteJoueur2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 560, 300, 173));

        carteEchiquier.setBackground(new java.awt.Color(255, 255, 255));
        carteEchiquier.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(carteEchiquier, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 300, 300, 173));

        panneauInfo.setBackground(new java.awt.Color(51, 204, 255));
        panneauInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Couleur :");
        panneauInfo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, -1, 20));

        jLabel2.setText("Nom Joueur 2 :");
        panneauInfo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 20));

        labelJ1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelJ1ActionPerformed(evt);
            }
        });
        panneauInfo.add(labelJ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 90, -1));
        panneauInfo.add(labelJ2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 90, -1));

        btnStart.setText("DÃ©marrer la partie");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        panneauInfo.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        jLabel3.setText("Joueur Courant :");
        panneauInfo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        labelJCourant.setText("nomJoueurCourant");
        panneauInfo.add(labelJCourant, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        message.setViewportView(jTextArea1);

        panneauInfo.add(message, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 60));
        panneauInfo.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 530, 30));

        jLabel4.setText("Nom Joueur 1 :");
        panneauInfo.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 20));

        labelCouleurJ1.setText("couleurJ1");
        panneauInfo.add(labelCouleurJ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, 20));

        labelCouleurJ2.setText("couleurJ2");
        panneauInfo.add(labelCouleurJ2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, 20));

        jLabel7.setText("Couleur :");
        panneauInfo.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, 20));

        getContentPane().add(panneauInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, 550, 250));

        setBounds(0, 0, 1414, 787);
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        carteJoueur1.setVisible(true);
        carteJoueur2.setVisible(true);
        carteEchiquier.setVisible(true);
        initialiserPartie();
        
        CelluleGraphique cellGraph1 = new CelluleGraphique(joueurCourant.listeCartes[0]);
        CelluleGraphique cellGraph2 = new CelluleGraphique(joueurCourant.listeCartes[1]);
        CelluleGraphique cellGraphE = new CelluleGraphique(grilleJeu.carteEchiquier);
        
        cellGraph1.addActionListener(new java.awt.event.ActionListener(){
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt){
                        
                    }
        });
        
        cellGraph2.addActionListener(new java.awt.event.ActionListener(){
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt){
                        
                    }
        });
        
        carteJoueur1.add(cellGraph1);
        carteJoueur2.add(cellGraph2);
        carteEchiquier.add(cellGraphE);
        
        panneauGrille.repaint();
        carteJoueur1.repaint();
        carteJoueur2.repaint();
        carteEchiquier.repaint();
        
        btnStart.setEnabled(false);
    }//GEN-LAST:event_btnStartActionPerformed

    private void labelJ1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelJ1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_labelJ1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenetreDeJeu().setVisible(true);
            }
        });
    }

    public void attribuerCouleursAuxJoueurs() {  //Attribution des couleurs au hasard
        Random r = new Random();
        boolean couleur;
        couleur = r.nextBoolean();
        if (couleur) {
            listeJoueurs[0].couleur = "Rouge";
            listeJoueurs[1].couleur = "Bleu";
        } else {
            listeJoueurs[0].couleur = "Bleu";
            listeJoueurs[1].couleur = "Rouge";

        }
    }
    
    public void placerTemple(){
        grilleJeu.Cellules[0][2].templeBleu=true;
        grilleJeu.Cellules[4][2].templeRouge=true;        
    }
    
    public void placerPieces(){
        if (listeJoueurs[0].couleur.equals("Bleu")){
            
            grilleJeu.Cellules[0][2].pieceCourante = listeJoueurs[0].listePieces[0];
            grilleJeu.Cellules[0][0].pieceCourante = listeJoueurs[0].listePieces[1];
            grilleJeu.Cellules[0][1].pieceCourante = listeJoueurs[0].listePieces[2];
            grilleJeu.Cellules[0][3].pieceCourante = listeJoueurs[0].listePieces[3];
            grilleJeu.Cellules[0][4].pieceCourante = listeJoueurs[0].listePieces[4];

            grilleJeu.Cellules[4][2].pieceCourante = listeJoueurs[1].listePieces[0];
            grilleJeu.Cellules[4][0].pieceCourante = listeJoueurs[1].listePieces[1];
            grilleJeu.Cellules[4][1].pieceCourante = listeJoueurs[1].listePieces[2];
            grilleJeu.Cellules[4][3].pieceCourante = listeJoueurs[1].listePieces[3];
            grilleJeu.Cellules[4][4].pieceCourante = listeJoueurs[1].listePieces[4];
        }
        else{
            grilleJeu.Cellules[0][2].pieceCourante = listeJoueurs[1].listePieces[0];
            grilleJeu.Cellules[0][0].pieceCourante = listeJoueurs[1].listePieces[1];
            grilleJeu.Cellules[0][1].pieceCourante = listeJoueurs[1].listePieces[2];
            grilleJeu.Cellules[0][3].pieceCourante = listeJoueurs[1].listePieces[3];
            grilleJeu.Cellules[0][4].pieceCourante = listeJoueurs[1].listePieces[4];

            grilleJeu.Cellules[4][2].pieceCourante = listeJoueurs[0].listePieces[0];
            grilleJeu.Cellules[4][0].pieceCourante = listeJoueurs[0].listePieces[1];
            grilleJeu.Cellules[4][1].pieceCourante = listeJoueurs[0].listePieces[2];
            grilleJeu.Cellules[4][3].pieceCourante = listeJoueurs[0].listePieces[3];
            grilleJeu.Cellules[4][4].pieceCourante = listeJoueurs[0].listePieces[4];
        }
}
    public void piocherCarte(Joueur unJoueur){        
        for (int i=0; i < unJoueur.listeCartes.length; i++){
            unJoueur.listeCartes[i] = piochePartie.cartePioche[0];
            tasserPioche();
        }
    }
    
    public void piocherCarteEchiquier(){
        grilleJeu.carteEchiquier = piochePartie.cartePioche[0];
        tasserPioche();
    }
    
     public void tasserPioche(){
        
        for (int i=0; i < piochePartie.cartePioche.length-1; i++){
            piochePartie.cartePioche[i] = piochePartie.cartePioche[i+1];            
        }
        piochePartie.cartePioche[piochePartie.cartePioche.length-1] = null;
    }
    
    public void initialiserPartie(){
        grilleJeu.viderGrille();       

        String nomJoueur1 = labelJ1.getText();
        Joueur J1 = new Joueur(nomJoueur1);
        labelJ1.setEnabled(false);
        
        String nomJoueur2 = labelJ2.getText();
        Joueur J2 = new Joueur(nomJoueur2);
        labelJ2.setEnabled(false);
        
        listeJoueurs[0] = J1;
        listeJoueurs[1] = J2;
        
        J1.definirPieces();
        J2.definirPieces();
        
        attribuerCouleursAuxJoueurs();
        
        J1.couleurPieces(J1.couleur);
        J2.couleurPieces(J2.couleur);
              
        labelCouleurJ1.setText(J1.couleur);
        labelCouleurJ2.setText(J2.couleur);
                
        
        placerTemple();
        placerPieces();
        placerPieces();
        
        this.piochePartie.melangerPioche(this.piochePartie.cartePioche); //On mÃ©lange la pioche et on attribue les cartes au joueur et les cartes de la grille
        piocherCarteEchiquier();
        piocherCarte(J1);
        piocherCarte(J2);
        
        Random r = new Random();    //On dÃ©finit au hasard le premier joueur
        boolean premierJoueur = r.nextBoolean();
        if (premierJoueur) {
            joueurCourant = listeJoueurs[0];
        } else {
            joueurCourant = listeJoueurs[1];
        }
        
        labelJCourant.setText(joueurCourant.nom);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JPanel carteEchiquier;
    private javax.swing.JPanel carteJoueur1;
    private javax.swing.JPanel carteJoueur2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelCouleurJ1;
    private javax.swing.JLabel labelCouleurJ2;
    private javax.swing.JTextField labelJ1;
    private javax.swing.JTextField labelJ2;
    private javax.swing.JLabel labelJCourant;
    private javax.swing.JScrollPane message;
    private javax.swing.JPanel panneauGrille;
    private javax.swing.JPanel panneauInfo;
    // End of variables declaration//GEN-END:variables
}
